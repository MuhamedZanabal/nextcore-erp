version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: nextcore
      POSTGRES_PASSWORD: nextcore
      POSTGRES_DB: nextcore
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextcore"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "--jetstream"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_USER: nextcore
      POSTGRES_PASSWORD: nextcore
      POSTGRES_DB: nextcore_timeseries
    ports:
      - "5433:5432"
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextcore"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    image: kong:3.3.0
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./infra/kong:/etc/kong
    depends_on:
      - auth-service
      - crm-service
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=nextcore
      - DB_PASSWORD=nextcore
      - DB_DATABASE=nextcore
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - nats
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  crm-service:
    build:
      context: ./services/crm-service
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=nextcore
      - DB_PASSWORD=nextcore
      - DB_DATABASE=nextcore
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - nats
      - auth-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend/app
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - api-gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  redis-data:
  timescaledb-data: